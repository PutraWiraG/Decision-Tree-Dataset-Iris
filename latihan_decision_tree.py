# -*- coding: utf-8 -*-
"""Latihan_Decision Tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tbFFTBohcA0zB3KogsV1sXXffdafinAo

Dataset iris terdiri dari 4 atribut yaitu panjang sepal, lebar sepal, panjang petal, dan lebar petal. Terdapat 3 kelas target pada dataset ini. Data ini digunakan untuk masalah klasifikasi, di mana kita memprediksi jenis spesies sebuah bunga berdasarkan atribut-atribut yang diberikan.
<br>
Tahapan yang ada pada latihan ini antara lain:


1. Ubah dataset ke dalam dataframe.
2. Hapus kolom 'Id' pada dataframe serta pisahkan antara atribut dan label. 
3. Bagi dataset menjadi data latih dan data uji.
4. Buat dan latih model Decision Tree.
5. Lakukan pengujian model dengan menggunakan data uji. 
6. Lakukan prediksi dengan model yang telah dilatih.
7. Visualisasi model Decision Tree yang telah dilatih.

Dataset bisa di unduh <a href="https://www.kaggle.com/uciml/iris">disini</a>

<h1>Data Collecting</h1>
"""

import pandas as pd

iris = pd.read_csv('/content/Iris.csv')

iris

iris.info()

"""<h1>Data Cleaning</h1>
<br>
Terdapat fitur yang tidak diperlukan dalam pembuatan model klasifikasi ini. Fitur tersebut merupakan kolom id dari dataset iris. Maka dari itu kolom id tersebut bisa di drop atau dihapus.
"""

iris.drop(
    'Id', 
    axis=1, 
    inplace=True
    )

iris.info()

iris

"""<h1>Pembagian Dataset</h1>"""

# Memisahkan antara atribut dan label pada dataset

atribut = iris[
    [
        'SepalLengthCm', 
        'SepalWidthCm', 
        'PetalLengthCm', 
        'PetalWidthCm']
    ]

label = iris['Species']


# Membagi dataset menjadi data train dan data test
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(atribut, label, test_size=0.1, random_state=123)

"""<h1>Pelatihan Model Menggunakan Decision Tree</h1>"""

from sklearn.tree import DecisionTreeClassifier

# Membuat model
model = DecisionTreeClassifier()

# Melatih Model
model = model.fit(
    x_train,
    y_train
    )

# Evaluasi Model
from sklearn.metrics import accuracy_score

y_pred = model.predict(x_test)

score_acc = round(accuracy_score(y_pred, y_test), 5)


print('Accuracy =', score_acc)

"""<h1>Coba Prediksi</h1>"""

print(model.predict([[2.4, 4.2, 7.2, 5.2]])[0])

from sklearn.tree import export_graphviz
export_graphviz(
    model,
    out_file = "iris_tree.dot",
    feature_names = ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm'],
    class_names = ['Iris-setosa', 'Iris-versicolor', 'Iris-virginica' ],
    rounded= True,
    filled =True)